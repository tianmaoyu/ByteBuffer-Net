<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections" #>
<#@ include file="T4Toolbox.tt" #>

<# string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");  #>

<#
  			var listTuple = new List<Tuple<string, string>>() 
              {
                new Tuple<string, string>("class_TalkCloud_TestTorceChoice","TestTorceChoice"),
			  
              };

            foreach(var tuple in listTuple)
            {

              (new EntityTemplate(solutionsPath)).Render();
             
            }
#>






<#+
public class EntityTemplate : CSharpTemplate
{
	
	public  EntityTemplate(string solutionsPath)
	{

		Output.Project =solutionsPath+@"\BufferWriteAndRead\BufferWriteAndRead.csproj";
		Output.File = @"Aclassroom\"+"tst.cs";
		Output.PreserveExistingFile=true;
	}
	public override string TransformText()
	{
		//base.TransformText();
#>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Acadsoc.Entity.Aclassroom
{
   public  class test
   {
       
      
   }
}
<#+
		return this.GenerationEnvironment.ToString();
	}
}

#>

